
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using Mozu.Api.Contracts.CommerceRuntime.Commerce;

namespace Mozu.Api.Contracts.CommerceRuntime.Products
{
		///
		///	Properties of a product set up in admin and added as an item in a cart or order.
		///
		public class Product
		{
			///
			///Allocation ID associated with this product on this order.
			///
			public DateTime? AllocationExpiration { get; set; }

			///
			///Allocation ID associated with this product on this order.
			///
			public int? AllocationId { get; set; }

			///
			///Properties of a collection of component products that make up a single product bundle with its own product code. Tenants can define product bundles for any product type that supports the Bundle product usage.
			///
			public List<BundledProduct> BundledProducts { get; set; }

			public List<Category> Categories { get; set; }

			public string Description { get; set; }

			///
			///Indicates if the discount is restricted. If true, the system cannot apply any discounts to this product. Discount restrictions are defined at the master catalog level. Client administrators cannot override discount restrictions at the catalog level, but they can limit the restriction to a defined time interval.For price list entries, specifies whether discounts are restricted for the specific entry if  is set to .Refer to [Discount Restriction](../../../guides/catalog/price-lists.htm#discountrestriction) in the Price Lists guides topic for more information.
			///
			public bool? DiscountsRestricted { get; set; }

			///
			///The date and time on which the discount restriction period ends.
			///
			public DateTime? DiscountsRestrictedEndDate { get; set; }

			///
			///The date and time on which the discount restriction period starts.
			///
			public DateTime? DiscountsRestrictedStartDate { get; set; }

			///
			///Fulfillment status of the product.
			///
			public string FulfillmentStatus { get; set; }

			///
			///List of supported types of fulfillment for the product or variation. The types include direct ship, in-store pickup, or both.
			///
			public List<string> FulfillmentTypesSupported { get; set; }

			///
			///The type of goods in a bundled product. A bundled product is composed of products associated to sell together. Possible values include â€œPhysicalâ€ and â€œDigitalCreditâ€. This comes from the `productType `of the product. Products are defaulted to a Physical `goodsType`. Gift cards have a `goodsType `of DigitalCredit.
			///
			public string GoodsType { get; set; }

			public string ImageAlternateText { get; set; }

			///
			///The URL link for the image file associated with a product or category.
			///
			public string ImageUrl { get; set; }

			///
			///Indicates if the product must be shipped alone in a container. This is used for products and products within a bundle. If true, this product cannot be shipped in a package with other items and must ship in a package by itself.
			///
			public bool IsPackagedStandAlone { get; set; }

			public bool? IsRecurring { get; set; }

			public bool? IsTaxable { get; set; }

			public PackageMeasurements Measurements { get; set; }

			///
			///The manufacturer's part number for the product.
			///
			public string MfgPartNumber { get; set; }

			public string Name { get; set; }

			public List<ProductOption> Options { get; set; }

			public ProductPrice Price { get; set; }

			public string ProductCode { get; set; }

			///
			///Unique identifier of the product reservation associated with the component product in a product bundle or item in a cart/order. System-supplied and read only.
			///
			public int? ProductReservationId { get; set; }

			public string ProductType { get; set; }

			///
			///The usage type that applies to this product, which is Standard (a single product without configurable options), Configurable (a product that includes configurable option attributes), Bundle (a collection of products sold as a single entity), or Component (an invididual product that represents a component in a bundle).
			///
			public string ProductUsage { get; set; }

			public List<ProductProperty> Properties { get; set; }

			///
			///The universal product code (UPC) is the barcode defined for the product. The UPC is unique across all sales channels.
			///
			public string Upc { get; set; }

			public string VariationProductCode { get; set; }

		}

}