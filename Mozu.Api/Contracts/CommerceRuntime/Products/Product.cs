
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using Mozu.Api.Contracts.CommerceRuntime.Commerce;

namespace Mozu.Api.Contracts.CommerceRuntime.Products
{
		///
		///	Properties of a product set up in admin and added as an item in a cart or order.
		///
		public class Product
		{
			public DateTime? AllocationExpiration { get; set; }

			public int? AllocationId { get; set; }

			///
			///Collection of component products that make up a single product bundle with its own product code, added to a cart or order.
			///
			public List<BundledProduct> BundledProducts { get; set; }

			///
			///The list of all categories associated with the product.
			///
			public List<Category> Categories { get; set; }

			///
			///Short description of the product in the language specified in the locale code for the storefront.
			///
			public string Description { get; set; }

			///
			///If true, the system cannot apply any discounts to this product. Discount restrictions are defined at the master catalog level. Client administrators cannot override discount restrictions at the catalog level, but they can limit the restriction to a defined time interval.
			///
			public bool? DiscountsRestricted { get; set; }

			///
			///The date and time on which the discount restriction period ends.
			///
			public DateTime? DiscountsRestrictedEndDate { get; set; }

			///
			///The date and time on which the discount restriction period starts.
			///
			public DateTime? DiscountsRestrictedStartDate { get; set; }

			public string FulfillmentStatus { get; set; }

			///
			///List of fulfillment types that the product supports.
			///
			public List<string> FulfillmentTypesSupported { get; set; }

			///
			///The type of goods of a product. For example: physical, digital, or digital credit.
			///
			public string GoodsType { get; set; }

			///
			///The alternate image description defined for the product, in the language specified in the locale code for the storefront.
			///
			public string ImageAlternateText { get; set; }

			///
			///The URL of the image file associated with a product on a storefront.
			///
			public string ImageUrl { get; set; }

			///
			///If true, this product cannot ship in a package with other items and must ship in a package by itself.
			///
			public bool IsPackagedStandAlone { get; set; }

			///
			///If true, the product can be purchased or fulfilled at regular intervals such as a monthly billing cycle or a digital or physical subscription.
			///
			public bool? IsRecurring { get; set; }

			///
			///If true, the entity is subject to sales tax based on the relevant tax rate.
			///
			public bool? IsTaxable { get; set; }

			///
			///Dimensions of the packaged product.
			///
			public PackageMeasurements Measurements { get; set; }

			///
			///The manufacturer's part number for the product.
			///
			public string MfgPartNumber { get; set; }

			///
			///The name of the product that appears on the storefront.
			///
			public string Name { get; set; }

			///
			///The list of option attributes configured for the product.
			///
			public List<ProductOption> Options { get; set; }

			///
			///The price of the product that appears on the storefront including any applied discounts.
			///
			public ProductPrice Price { get; set; }

			///
			///Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
			///
			public string ProductCode { get; set; }

			///
			///The unique identifier of the product reservation created for this item in the cart or order.
			///
			public int? ProductReservationId { get; set; }

			///
			///The product type template associated with the product on the storefront.
			///
			public string ProductType { get; set; }

			///
			///The usage type that applies to this product, which is Standard (a single product without configurable options), Configurable (a product that includes configurable option attributes), Bundle (a collection of products sold as a single entity), or Component (an invididual product that represents a component in a bundle).
			///
			public string ProductUsage { get; set; }

			///
			///Collection of property attributes defined for the item in the cart or order.
			///
			public List<ProductProperty> Properties { get; set; }

			///
			///The universal product code defined for the product.
			///
			public string Upc { get; set; }

			///
			///Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
			///
			public string VariationProductCode { get; set; }

		}

}