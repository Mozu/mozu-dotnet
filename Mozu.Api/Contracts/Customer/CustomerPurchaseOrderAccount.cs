
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using Mozu.Api.Contracts.Core;

namespace Mozu.Api.Contracts.Customer
{
		///
		///	The details of a customer's purchase order account.
		///
		public class CustomerPurchaseOrderAccount
		{
			///
			///Unique identifier of the customer account generated by the system. Account IDs are generated at account creation.
			///
			public int AccountId { get; set; }

			///
			///Basic audit info about the object, including date, time, and user account. This data may be captured when creating, updating, and removing data.
			///
			public AuditInfo AuditInfo { get; set; }

			///
			///The available balance the customer has on their purchase order account. This balance is the result of the  minus the customer's total amount due.
			///
			public decimal AvailableBalance { get; set; }

			///
			///The total credit limit the customer can spend using purchase orders.
			///
			public decimal CreditLimit { get; set; }

			///
			///The specific payment terms for the customer's purchase order account. Each payment term is associated with a specific site, and you can specify more than one payment term for each site.
			///
			public List<CustomerPurchaseOrderPaymentTerm> CustomerPurchaseOrderPaymentTerms { get; set; }

			///
			///Unique identifier of the source property, such as a catalog, discount, order, or email template.For a product field it will be the name of the field.For a category ID, must be a positive integer not greater than 2000000. By default,  auto-generates a category ID when categories are created. If you want to specify an ID during creation (which preserves category link relationships when migrating tenant data from one sandbox to another), you must also include the  query string in the endpoint. For example, . Then, use the  property to specify the desired category ID.For a product attribute it will be the Attribute FQN.For a document, the ID must be specified as a 32 character, case-insensitive, alphanumeric string. You can specify the ID as 32 sequential characters or as groups separated by dashes in the format 8-4-4-4-12. For example, or.For email templates, the ID must be one of the following values:///
			///
			public int Id { get; set; }

			///
			///Indicates if the object or process is enabled. This indicator is used on external payment workflows and product option values. For product options, if true, the product option value is available for a shopper to choose. During configuration, this property will be false if the option value is invalid with other selected options. For external payment workflows, if true, the workflow is enabled and available for routing payments for the submitted order.
			///
			public bool IsEnabled { get; set; }

			///
			///The total monetary amount the customer can spend over their purchase order . The  controls the units of this amount.
			///
			public decimal? OverdraftAllowance { get; set; }

			///
			///Specifies the type and units of the  amount.The valid values are:*  â€” specifies that the  amount is a decimal amount.*  â€” specifies that the  amount is a percentage amount.
			///
			public string OverdraftAllowanceType { get; set; }

			///
			///The total available balance the customer has on their purchase order account. This balance is the result of the  minus the .
			///
			public decimal TotalAvailableBalance { get; set; }

		}

}