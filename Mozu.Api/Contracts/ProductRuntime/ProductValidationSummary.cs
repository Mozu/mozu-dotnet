
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;


namespace Mozu.Api.Contracts.ProductRuntime
{
		///
		///	Summary list of the product validation in a storefront, including options selected by the shopper.
		///
		public class ProductValidationSummary
		{
			///
			///Properties of a collection of component products that make up a single product bundle with its own product code.
			///
			public List<BundledProductSummary> BundledProducts { get; set; }

			public List<Category> Categories { get; set; }

			///
			///List of fulfillment types that the product supports.
			///
			public List<string> FulfillmentTypesSupported { get; set; }

			public string GoodsType { get; set; }

			public ProductImage Image { get; set; }

			public ProductInventoryInfo InventoryInfo { get; set; }

			///
			///If true, this product should not be packaged with other items and should ship by itself.
			///
			public bool? IsPackagedStandAlone { get; set; }

			public bool IsTaxable { get; set; }

			public PackageMeasurements Measurements { get; set; }

			///
			///The manufacturer's part number for the product.
			///
			public string MfgPartNumber { get; set; }

			public ProductPrice Price { get; set; }

			///
			///Properties that describe the behavior the system uses when determining the price of the product.
			///
			public ProductPricingBehaviorInfo PricingBehavior { get; set; }

			public string ProductCode { get; set; }

			public string ProductName { get; set; }

			public string ProductShortDescription { get; set; }

			public string ProductType { get; set; }

			///
			///The usage type of this product, which is Standard (a single product without configurable options), Configurable (a product that includes configurable option attributes), Bundle (a collection of products sold as a single entity), or Component (an invididual product that represents a component in a bundle).
			///
			public string ProductUsage { get; set; }

			public List<ProductProperty> Properties { get; set; }

			public ProductPurchasableState PurchasableState { get; set; }

			public string PurchaseLocation { get; set; }

			///
			///The universal product code defined for the product.
			///
			public string Upc { get; set; }

			public string VariationProductCode { get; set; }

		}

}