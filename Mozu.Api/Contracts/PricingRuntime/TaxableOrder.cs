
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Newtonsoft.Json.Linq;

using Mozu.Api.Contracts.Core;

namespace Mozu.Api.Contracts.PricingRuntime
{
		///
		///	Properties of an order to calculate tax against. When a tax capability is enabled for a tenant,  sends the `TaxableOrder `properties to the capability as read-only, system-supplied information.
		///
		public class TaxableOrder
		{
			///
			///Collection of attributes that may be paged list or a list, depending on the usage per object and API type.
			///
			public List<TaxAttribute> Attributes { get; set; }

			public string CurrencyCode { get; set; }

			///
			///Custom data for a given vendor set within the commerce process.
			///
			public JObject Data { get; set; }

			///
			///The discount applied to the order's handling fee.
			///
			public AppliedDiscount HandlingDiscount { get; set; }

			///
			///The handling discounts applied to the order's handling fee.
			///
			public List<AppliedDiscount> HandlingDiscounts { get; set; }

			public decimal HandlingFee { get; set; }

			public List<TaxableLineItem> LineItems { get; set; }

			public DateTime OrderDate { get; set; }

			///
			///The discount applied to the order.
			///
			public AppliedDiscount OrderDiscount { get; set; }

			///
			///List of order-level discounts projected to apply to the cart at checkout or order.
			///
			public List<AppliedDiscount> OrderDiscounts { get; set; }

			///
			///Unique identifier of the order associated with the payment.
			///
			public string OrderId { get; set; }

			///
			///The order number that the customer sees on the storefront when they place the order.
			///
			public int? OrderNumber { get; set; }

			///
			///The unique identifier of the original order, used to track order changes for tax purposes.
			///
			public string OriginalDocumentCode { get; set; }

			///
			///The date and time the original order was placed. This date is set when the order is submitted with payment. 
			///
			public DateTime OriginalOrderDate { get; set; }

			public decimal ShippingAmount { get; set; }

			///
			///The discount applied to the order's shipping cost.
			///
			public AppliedOrderShippingDiscount ShippingDiscount { get; set; }

			///
			///List of shipping discounts projected to apply to carts, orders, and wish lists and items at checkout.
			///
			public List<AppliedOrderShippingDiscount> ShippingDiscounts { get; set; }

			///
			///The code associated with a carrier's shipping method service type, used during fulfillment of packages and shipments. Service type codes include a prefix that indicates the carrier. For example: FEDEX_INTERNATIONAL_STANDARD and UPS_GROUND.If using a custom rate, this property corresponds to the  field in  when you navigate to  &gt;  &gt; , and then click on an existing rate or on .
			///
			public string ShippingMethodCode { get; set; }

			///
			///The carrier-supplied name for the shipping service type, such as "UPS Ground" or "2nd Day Air".If using a custom rate, this property corresponds to the  field in  when you navigate to  &gt;  &gt; , and then click on an existing rate or on .
			///
			public string ShippingMethodName { get; set; }

			public TaxContext TaxContext { get; set; }

			///
			///The type of request for which to tax this entity, which is Order or Return.
			///
			public string TaxRequestType { get; set; }

		}

}