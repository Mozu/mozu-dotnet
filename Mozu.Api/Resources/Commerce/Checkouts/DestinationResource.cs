
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using System.Threading;

namespace Mozu.Api.Resources.Commerce.Checkouts
{
	/// <summary>
	/// Use this resource to manage the addresses a shopper intends to ship items to. This resource remains active while the Checkouts resource is active (the Checkouts resource only applies to sites that enable shipping to multiple destinations within the same order). The Checkouts resource remains active until the shopper submits their order.
	/// </summary>
	public partial class DestinationResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;

		
		public DestinationResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		public DestinationResource CloneWithApiContext(Action<IApiContext> contextModification) 
		{
			return new DestinationResource(_apiContext.CloneWith(contextModification));
		}

				

		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId">The unique identifier of the checkout.</param>
		/// <returns>
		/// List{<see cref="Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Destination"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var destination = new Destination();
		///   var destination = await destination.GetDestinationsAsync( checkoutId);
		/// </code>
		/// </example>
		public virtual async Task<List<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Destination>> GetDestinationsAsync(string checkoutId, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<List<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Destination>> response;
			var client = Mozu.Api.Clients.Commerce.Checkouts.DestinationClient.GetDestinationsClient( checkoutId);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId">The unique identifier of the checkout.</param>
		/// <param name="destinationId">The unique identifier of the destination.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Destination"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var destination = new Destination();
		///   var destination = await destination.GetDestinationAsync( checkoutId,  destinationId,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Destination> GetDestinationAsync(string checkoutId, string destinationId, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Destination> response;
			var client = Mozu.Api.Clients.Commerce.Checkouts.DestinationClient.GetDestinationClient( checkoutId,  destinationId,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId">The unique identifier of the checkout.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <param name="destination">The destination object.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Destination"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var destination = new Destination();
		///   var destination = await destination.AddDestinationAsync( destination,  checkoutId,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Destination> AddDestinationAsync(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Destination destination, string checkoutId, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Destination> response;
			var client = Mozu.Api.Clients.Commerce.Checkouts.DestinationClient.AddDestinationClient( destination,  checkoutId,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId">The unique identifier of the checkout.</param>
		/// <param name="destinationId">The unique identifier of the destination.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <param name="destination">The destination object.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Destination"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var destination = new Destination();
		///   var destination = await destination.UpdateDestinationAsync( destination,  checkoutId,  destinationId,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Destination> UpdateDestinationAsync(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Destination destination, string checkoutId, string destinationId, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Destination> response;
			var client = Mozu.Api.Clients.Commerce.Checkouts.DestinationClient.UpdateDestinationClient( destination,  checkoutId,  destinationId,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId">The unique identifier of the checkout.</param>
		/// <param name="destinationId">The unique identifier of the destination.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var destination = new Destination();
		///   await destination.RemoveDestinationAsync( checkoutId,  destinationId);
		/// </code>
		/// </example>
		public virtual async Task RemoveDestinationAsync(string checkoutId, string destinationId, CancellationToken ct = default(CancellationToken))
		{
			MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Checkouts.DestinationClient.RemoveDestinationClient( checkoutId,  destinationId);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);

		}


	}

}


