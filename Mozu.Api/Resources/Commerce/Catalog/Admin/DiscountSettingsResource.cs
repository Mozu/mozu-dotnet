
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using System.Threading;

namespace Mozu.Api.Resources.Commerce.Catalog.Admin
{
	/// <summary>
	/// 
	/// </summary>
	public partial class DiscountSettingsResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;

		private readonly DataViewMode _dataViewMode;
		
		public DiscountSettingsResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
			_dataViewMode = DataViewMode.Live;
		}

		public DiscountSettingsResource CloneWithApiContext(Action<IApiContext> contextModification) 
		{
			return new DiscountSettingsResource(_apiContext.CloneWith(contextModification), _dataViewMode);
		}

		public DiscountSettingsResource(IApiContext apiContext, DataViewMode dataViewMode) 
		{
			_apiContext = apiContext;
			_dataViewMode = dataViewMode;
		}
				

		/// <summary>
		/// 
		/// </summary>
		/// <param name="catalogId"></param>
		/// <param name="responseFields"></param>
		/// <param name="dataViewMode">{<see cref="Mozu.Api.DataViewMode"/>}</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.DiscountSettings"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var discountsettings = new DiscountSettings();
		///   var discountSettings = await discountsettings.GetDiscountSettingsAsync(_dataViewMode,  catalogId,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.ProductAdmin.DiscountSettings> GetDiscountSettingsAsync(int catalogId, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.ProductAdmin.DiscountSettings> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountSettingsClient.GetDiscountSettingsClient(_dataViewMode,  catalogId,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="catalogId"></param>
		/// <param name="responseFields"></param>
		/// <param name="dataViewMode">{<see cref="Mozu.Api.DataViewMode"/>}</param>
		/// <param name="discountSettings"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.DiscountSettings"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var discountsettings = new DiscountSettings();
		///   var discountSettings = await discountsettings.UpdateDiscountSettingsAsync( discountSettings,  catalogId,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.ProductAdmin.DiscountSettings> UpdateDiscountSettingsAsync(Mozu.Api.Contracts.ProductAdmin.DiscountSettings discountSettings, int catalogId, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.ProductAdmin.DiscountSettings> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountSettingsClient.UpdateDiscountSettingsClient( discountSettings,  catalogId,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


	}

}


