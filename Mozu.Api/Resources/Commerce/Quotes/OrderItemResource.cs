
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using System.Threading;

namespace Mozu.Api.Resources.Commerce.Quotes
{
	/// <summary>
	/// 
	/// </summary>
	public partial class OrderItemResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;

		
		public OrderItemResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		public OrderItemResource CloneWithApiContext(Action<IApiContext> contextModification) 
		{
			return new OrderItemResource(_apiContext.CloneWith(contextModification));
		}

				

		/// <summary>
		/// 
		/// </summary>
		/// <param name="quoteId"></param>
		/// <param name="quoteItemId"></param>
		/// <param name="responseFields"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var orderitem = new OrderItem();
		///   var orderItem = await orderitem.GetQuoteItemAsync( quoteId,  quoteItemId,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem> GetQuoteItemAsync(string quoteId, string quoteItemId, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem> response;
			var client = Mozu.Api.Clients.Commerce.Quotes.OrderItemClient.GetQuoteItemClient( quoteId,  quoteItemId,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="filter"></param>
		/// <param name="pageSize"></param>
		/// <param name="quoteId"></param>
		/// <param name="responseFields"></param>
		/// <param name="sortBy"></param>
		/// <param name="startIndex"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Quotes.QuoteItemCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var orderitem = new OrderItem();
		///   var quoteItemCollection = await orderitem.GetQuoteItemsAsync( quoteId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.CommerceRuntime.Quotes.QuoteItemCollection> GetQuoteItemsAsync(string quoteId, int? startIndex =  null, int? pageSize =  null, string sortBy =  null, string filter =  null, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Quotes.QuoteItemCollection> response;
			var client = Mozu.Api.Clients.Commerce.Quotes.OrderItemClient.GetQuoteItemsClient( quoteId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="customerAccountId"></param>
		/// <param name="filter"></param>
		/// <param name="pageSize"></param>
		/// <param name="quoteName"></param>
		/// <param name="responseFields"></param>
		/// <param name="sortBy"></param>
		/// <param name="startIndex"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Quotes.QuoteItemCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var orderitem = new OrderItem();
		///   var quoteItemCollection = await orderitem.GetQuoteItemsByQuoteNameAsync( customerAccountId,  quoteName,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.CommerceRuntime.Quotes.QuoteItemCollection> GetQuoteItemsByQuoteNameAsync(int customerAccountId, string quoteName, int? startIndex =  null, int? pageSize =  null, string sortBy =  null, string filter =  null, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Quotes.QuoteItemCollection> response;
			var client = Mozu.Api.Clients.Commerce.Quotes.OrderItemClient.GetQuoteItemsByQuoteNameClient( customerAccountId,  quoteName,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="quoteId"></param>
		/// <param name="responseFields"></param>
		/// <param name="quoteItem"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Quotes.Quote"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var orderitem = new OrderItem();
		///   var quote = await orderitem.AddItemToQuoteAsync( quoteItem,  quoteId,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.CommerceRuntime.Quotes.Quote> AddItemToQuoteAsync(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem quoteItem, string quoteId, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Quotes.Quote> response;
			var client = Mozu.Api.Clients.Commerce.Quotes.OrderItemClient.AddItemToQuoteClient( quoteItem,  quoteId,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="quoteId"></param>
		/// <param name="quoteItemId"></param>
		/// <param name="responseFields"></param>
		/// <param name="quoteItem"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Quotes.Quote"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var orderitem = new OrderItem();
		///   var quote = await orderitem.UpdateQuoteItemAsync( quoteItem,  quoteId,  quoteItemId,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.CommerceRuntime.Quotes.Quote> UpdateQuoteItemAsync(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem quoteItem, string quoteId, string quoteItemId, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Quotes.Quote> response;
			var client = Mozu.Api.Clients.Commerce.Quotes.OrderItemClient.UpdateQuoteItemClient( quoteItem,  quoteId,  quoteItemId,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="quoteId"></param>
		/// <param name="quoteItemId"></param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var orderitem = new OrderItem();
		///   await orderitem.DeleteQuoteItemAsync( quoteId,  quoteItemId);
		/// </code>
		/// </example>
		public virtual async Task DeleteQuoteItemAsync(string quoteId, string quoteItemId, CancellationToken ct = default(CancellationToken))
		{
			MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Quotes.OrderItemClient.DeleteQuoteItemClient( quoteId,  quoteItemId);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);

		}


	}

}


