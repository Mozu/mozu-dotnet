
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using System.Threading;

namespace Mozu.Api.Resources.Commerce.Shipping.Admin.Profiles
{
	/// <summary>
	/// Use the OrderHandlingFeeRules sub-resource to manage your order handling fee rules that are associated with a specific shipping profile.
	/// </summary>
	public partial class OrderHandlingFeeRulesResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;

		
		public OrderHandlingFeeRulesResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		public OrderHandlingFeeRulesResource CloneWithApiContext(Action<IApiContext> contextModification) 
		{
			return new OrderHandlingFeeRulesResource(_apiContext.CloneWith(contextModification));
		}

				

		/// <summary>
		/// 
		/// </summary>
		/// <param name="id"></param>
		/// <param name="profilecode"></param>
		/// <param name="responseFields"></param>
		/// <param name="dataViewMode">{<see cref="Mozu.Api.DataViewMode"/>}</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRule"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var orderhandlingfeerules = new OrderHandlingFeeRules();
		///   var handlingFeeRule = await orderhandlingfeerules.GetOrderHandlingFeeRuleAsync( profilecode,  id,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRule> GetOrderHandlingFeeRuleAsync(string profilecode, string id, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRule> response;
			var client = Mozu.Api.Clients.Commerce.Shipping.Admin.Profiles.OrderHandlingFeeRulesClient.GetOrderHandlingFeeRuleClient( profilecode,  id,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="profilecode"></param>
		/// <param name="responseFields"></param>
		/// <param name="dataViewMode">{<see cref="Mozu.Api.DataViewMode"/>}</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRuleCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var orderhandlingfeerules = new OrderHandlingFeeRules();
		///   var handlingFeeRuleCollection = await orderhandlingfeerules.GetOrderHandlingFeeRulesAsync( profilecode,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRuleCollection> GetOrderHandlingFeeRulesAsync(string profilecode, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRuleCollection> response;
			var client = Mozu.Api.Clients.Commerce.Shipping.Admin.Profiles.OrderHandlingFeeRulesClient.GetOrderHandlingFeeRulesClient( profilecode,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="profilecode"></param>
		/// <param name="responseFields"></param>
		/// <param name="dataViewMode">{<see cref="Mozu.Api.DataViewMode"/>}</param>
		/// <param name="rule"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRule"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var orderhandlingfeerules = new OrderHandlingFeeRules();
		///   var handlingFeeRule = await orderhandlingfeerules.CreateOrderHandlingFeeRuleAsync( rule,  profilecode,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRule> CreateOrderHandlingFeeRuleAsync(Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRule rule, string profilecode, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRule> response;
			var client = Mozu.Api.Clients.Commerce.Shipping.Admin.Profiles.OrderHandlingFeeRulesClient.CreateOrderHandlingFeeRuleClient( rule,  profilecode,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="id"></param>
		/// <param name="profilecode"></param>
		/// <param name="responseFields"></param>
		/// <param name="dataViewMode">{<see cref="Mozu.Api.DataViewMode"/>}</param>
		/// <param name="rule"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRule"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var orderhandlingfeerules = new OrderHandlingFeeRules();
		///   var handlingFeeRule = await orderhandlingfeerules.UpdateOrderHandlingFeeRuleAsync( rule,  profilecode,  id,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRule> UpdateOrderHandlingFeeRuleAsync(Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRule rule, string profilecode, string id, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRule> response;
			var client = Mozu.Api.Clients.Commerce.Shipping.Admin.Profiles.OrderHandlingFeeRulesClient.UpdateOrderHandlingFeeRuleClient( rule,  profilecode,  id,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="id"></param>
		/// <param name="profilecode"></param>
		/// <param name="dataViewMode">{<see cref="Mozu.Api.DataViewMode"/>}</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var orderhandlingfeerules = new OrderHandlingFeeRules();
		///   await orderhandlingfeerules.DeleteOrderHandlingFeeRuleAsync( profilecode,  id);
		/// </code>
		/// </example>
		public virtual async Task DeleteOrderHandlingFeeRuleAsync(string profilecode, string id, CancellationToken ct = default(CancellationToken))
		{
			MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Shipping.Admin.Profiles.OrderHandlingFeeRulesClient.DeleteOrderHandlingFeeRuleClient( profilecode,  id);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);

		}


	}

}


