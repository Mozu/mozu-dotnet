
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using System.Threading;

namespace Mozu.Api.Resources.Commerce.Shipping.Admin.Profiles
{
	/// <summary>
	/// 
	/// </summary>
	public partial class HandlingFeeRuleResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;

		private readonly DataViewMode _dataViewMode;
		
		public HandlingFeeRuleResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
			_dataViewMode = DataViewMode.Live;
		}

		public HandlingFeeRuleResource CloneWithApiContext(Action<IApiContext> contextModification) 
		{
			return new HandlingFeeRuleResource(_apiContext.CloneWith(contextModification), _dataViewMode);
		}

		public HandlingFeeRuleResource(IApiContext apiContext, DataViewMode dataViewMode) 
		{
			_apiContext = apiContext;
			_dataViewMode = dataViewMode;
		}
				

		/// <summary>
		/// 
		/// </summary>
		/// <param name="id"></param>
		/// <param name="profilecode"></param>
		/// <param name="responseFields"></param>
		/// <param name="dataViewMode">{<see cref="Mozu.Api.DataViewMode"/>}</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRule"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var handlingfeerule = new HandlingFeeRule();
		///   var handlingFeeRule = await handlingfeerule.GetProductHandlingFeeRuleAsync(_dataViewMode,  profilecode,  id,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRule> GetProductHandlingFeeRuleAsync(string profilecode, string id, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRule> response;
			var client = Mozu.Api.Clients.Commerce.Shipping.Admin.Profiles.HandlingFeeRuleClient.GetProductHandlingFeeRuleClient(_dataViewMode,  profilecode,  id,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="profilecode"></param>
		/// <param name="responseFields"></param>
		/// <param name="dataViewMode">{<see cref="Mozu.Api.DataViewMode"/>}</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRuleCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var handlingfeerule = new HandlingFeeRule();
		///   var handlingFeeRuleCollection = await handlingfeerule.GetProductHandlingFeeRulesAsync(_dataViewMode,  profilecode,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRuleCollection> GetProductHandlingFeeRulesAsync(string profilecode, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRuleCollection> response;
			var client = Mozu.Api.Clients.Commerce.Shipping.Admin.Profiles.HandlingFeeRuleClient.GetProductHandlingFeeRulesClient(_dataViewMode,  profilecode,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="profilecode"></param>
		/// <param name="responseFields"></param>
		/// <param name="dataViewMode">{<see cref="Mozu.Api.DataViewMode"/>}</param>
		/// <param name="rule"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRule"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var handlingfeerule = new HandlingFeeRule();
		///   var handlingFeeRule = await handlingfeerule.CreateProductHandlingFeeRuleAsync( rule,  profilecode,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRule> CreateProductHandlingFeeRuleAsync(Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRule rule, string profilecode, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRule> response;
			var client = Mozu.Api.Clients.Commerce.Shipping.Admin.Profiles.HandlingFeeRuleClient.CreateProductHandlingFeeRuleClient( rule,  profilecode,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="id"></param>
		/// <param name="profilecode"></param>
		/// <param name="responseFields"></param>
		/// <param name="dataViewMode">{<see cref="Mozu.Api.DataViewMode"/>}</param>
		/// <param name="rule"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRule"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var handlingfeerule = new HandlingFeeRule();
		///   var handlingFeeRule = await handlingfeerule.UpdateProductHandlingFeeRuleAsync(_dataViewMode,  rule,  profilecode,  id,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRule> UpdateProductHandlingFeeRuleAsync(Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRule rule, string profilecode, string id, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.ShippingAdmin.Profile.HandlingFeeRule> response;
			var client = Mozu.Api.Clients.Commerce.Shipping.Admin.Profiles.HandlingFeeRuleClient.UpdateProductHandlingFeeRuleClient(_dataViewMode,  rule,  profilecode,  id,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="id"></param>
		/// <param name="profilecode"></param>
		/// <param name="dataViewMode">{<see cref="Mozu.Api.DataViewMode"/>}</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var handlingfeerule = new HandlingFeeRule();
		///   await handlingfeerule.DeleteProductHandlingFeeRuleAsync(_dataViewMode,  profilecode,  id);
		/// </code>
		/// </example>
		public virtual async Task DeleteProductHandlingFeeRuleAsync(string profilecode, string id, CancellationToken ct = default(CancellationToken))
		{
			MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Shipping.Admin.Profiles.HandlingFeeRuleClient.DeleteProductHandlingFeeRuleClient(_dataViewMode,  profilecode,  id);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);

		}


	}

}


