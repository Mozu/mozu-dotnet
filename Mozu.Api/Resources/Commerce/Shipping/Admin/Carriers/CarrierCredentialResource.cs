
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using System.Threading;

namespace Mozu.Api.Resources.Commerce.Shipping.Admin.Carriers
{
	/// <summary>
	/// 
	/// </summary>
	public partial class CarrierCredentialResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;

		
		public CarrierCredentialResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		public CarrierCredentialResource CloneWithApiContext(Action<IApiContext> contextModification) 
		{
			return new CarrierCredentialResource(_apiContext.CloneWith(contextModification));
		}

				

		/// <summary>
		/// 
		/// </summary>
		/// <param name="filter"></param>
		/// <param name="pageSize"></param>
		/// <param name="responseFields"></param>
		/// <param name="sortBy"></param>
		/// <param name="startIndex"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ShippingAdmin.Carriers.CarrierCredentialCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var carriercredential = new CarrierCredential();
		///   var carrierCredentialCollection = await carriercredential.GetCarrierCredentialsAsync( startIndex,  pageSize,  sortBy,  filter,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.ShippingAdmin.Carriers.CarrierCredentialCollection> GetCarrierCredentialsAsync(int? startIndex =  null, int? pageSize =  null, string sortBy =  null, string filter =  null, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.ShippingAdmin.Carriers.CarrierCredentialCollection> response;
			var client = Mozu.Api.Clients.Commerce.Shipping.Admin.Carriers.CarrierCredentialClient.GetCarrierCredentialsClient( startIndex,  pageSize,  sortBy,  filter,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="carrierId"></param>
		/// <param name="locationCode"></param>
		/// <param name="locationGroupCode"></param>
		/// <param name="responseFields"></param>
		/// <param name="siteId"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ShippingAdmin.Carriers.CarrierCredential"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var carriercredential = new CarrierCredential();
		///   var carrierCredential = await carriercredential.GetCarrierCredentialAsync( carrierId,  siteId,  locationGroupCode,  locationCode,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.ShippingAdmin.Carriers.CarrierCredential> GetCarrierCredentialAsync(string carrierId, int? siteId =  null, string locationGroupCode =  null, string locationCode =  null, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.ShippingAdmin.Carriers.CarrierCredential> response;
			var client = Mozu.Api.Clients.Commerce.Shipping.Admin.Carriers.CarrierCredentialClient.GetCarrierCredentialClient( carrierId,  siteId,  locationGroupCode,  locationCode,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="carrierId"></param>
		/// <param name="responseFields"></param>
		/// <param name="carrierCredential"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ShippingAdmin.Carriers.CarrierCredential"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var carriercredential = new CarrierCredential();
		///   var carrierCredential = await carriercredential.CreateCarrierCredentialAsync( carrierCredential,  carrierId,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.ShippingAdmin.Carriers.CarrierCredential> CreateCarrierCredentialAsync(Mozu.Api.Contracts.ShippingAdmin.Carriers.CarrierCredential carrierCredential, string carrierId, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.ShippingAdmin.Carriers.CarrierCredential> response;
			var client = Mozu.Api.Clients.Commerce.Shipping.Admin.Carriers.CarrierCredentialClient.CreateCarrierCredentialClient( carrierCredential,  carrierId,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="carrierId"></param>
		/// <param name="locationCode"></param>
		/// <param name="locationGroupCode"></param>
		/// <param name="responseFields"></param>
		/// <param name="siteId"></param>
		/// <param name="carrierCredential"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ShippingAdmin.Carriers.CarrierCredential"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var carriercredential = new CarrierCredential();
		///   var carrierCredential = await carriercredential.UpdateCarrierCredentialAsync( carrierCredential,  carrierId,  siteId,  locationGroupCode,  locationCode,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.ShippingAdmin.Carriers.CarrierCredential> UpdateCarrierCredentialAsync(Mozu.Api.Contracts.ShippingAdmin.Carriers.CarrierCredential carrierCredential, string carrierId, int? siteId =  null, string locationGroupCode =  null, string locationCode =  null, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.ShippingAdmin.Carriers.CarrierCredential> response;
			var client = Mozu.Api.Clients.Commerce.Shipping.Admin.Carriers.CarrierCredentialClient.UpdateCarrierCredentialClient( carrierCredential,  carrierId,  siteId,  locationGroupCode,  locationCode,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="carrierId"></param>
		/// <param name="locationCode"></param>
		/// <param name="locationGroupCode"></param>
		/// <param name="siteId"></param>
		/// <returns>
		/// <see cref="System.IO.Stream"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var carriercredential = new CarrierCredential();
		///   var stream = await carriercredential.DeleteCarrierCredentialAsync( carrierId,  siteId,  locationGroupCode,  locationCode);
		/// </code>
		/// </example>
		public virtual async Task<System.IO.Stream> DeleteCarrierCredentialAsync(string carrierId, int? siteId =  null, string locationGroupCode =  null, string locationCode =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<System.IO.Stream> response;
			var client = Mozu.Api.Clients.Commerce.Shipping.Admin.Carriers.CarrierCredentialClient.DeleteCarrierCredentialClient( carrierId,  siteId,  locationGroupCode,  locationCode);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


	}

}


