
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using System.Threading;

namespace Mozu.Api.Resources.Content
{
	/// <summary>
	/// Use the Content Publish Set resource to manage content publish sets and the pending content drafts.You can use content publish sets to group pending content changes together and publish them all at the same time.
	/// </summary>
	public partial class PublishSetSummaryResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;

		
		public PublishSetSummaryResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		public PublishSetSummaryResource CloneWithApiContext(Action<IApiContext> contextModification) 
		{
			return new PublishSetSummaryResource(_apiContext.CloneWith(contextModification));
		}

				

		/// <summary>
		/// 
		/// </summary>
		/// <param name="pageSize">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with this parameter set to 25, to get the 51st through the 75th items, set startIndex to 50.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with pageSize set to 25, to get the 51st through the 75th items, set this parameter to 50.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Content.PublishSetSummaryPagedCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var publishsetsummary = new PublishSetSummary();
		///   var publishSetSummaryPagedCollection = await publishsetsummary.GetPublishSetsAsync( pageSize,  startIndex,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.Content.PublishSetSummaryPagedCollection> GetPublishSetsAsync(int? pageSize =  null, int? startIndex =  null, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Content.PublishSetSummaryPagedCollection> response;
			var client = Mozu.Api.Clients.Content.PublishSetSummaryClient.GetPublishSetsClient( pageSize,  startIndex,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="code">User-defined code that uniqely identifies the channel group.</param>
		/// <param name="filter">A set of filter expressions representing the search parameters for a query. This parameter is optional. Refer to [Sorting and Filtering](../../../../Developer/api-guides/sorting-filtering.htm) for a list of supported filters.</param>
		/// <param name="pageSize">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with this parameter set to 25, to get the 51st through the 75th items, set startIndex to 50.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional. Refer to [Sorting and Filtering](../../../../Developer/api-guides/sorting-filtering.htm) for more information.</param>
		/// <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with pageSize set to 25, to get the 51st through the 75th items, set this parameter to 50.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var publishsetsummary = new PublishSetSummary();
		///   var documentDraftSummaryPagedCollection = await publishsetsummary.GetPublishSetItemsAsync( code,  pageSize,  startIndex,  sortBy,  filter,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection> GetPublishSetItemsAsync(string code, int? pageSize =  null, int? startIndex =  null, string sortBy =  null, string filter =  null, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection> response;
			var client = Mozu.Api.Clients.Content.PublishSetSummaryClient.GetPublishSetItemsClient( code,  pageSize,  startIndex,  sortBy,  filter,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="code">User-defined code that uniqely identifies the channel group.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <param name="shouldDiscard">Specifies whether to discard the pending content changes assigned to the content publish set when the publish set is deleted.</param>
		/// <returns>
		/// object
		/// </returns>
		/// <example>
		/// <code>
		///   var publishsetsummary = new PublishSetSummary();
		///   var object = await publishsetsummary.DeletePublishSetAsync( code,  shouldDiscard,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<object> DeletePublishSetAsync(string code, bool? shouldDiscard =  null, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<object> response;
			var client = Mozu.Api.Clients.Content.PublishSetSummaryClient.DeletePublishSetClient( code,  shouldDiscard,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="code">User-defined code that uniqely identifies the channel group.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <param name="itemsToPublish">The details of the items that you want to add to a specified publish set.</param>
		/// <returns>
		/// object
		/// </returns>
		/// <example>
		/// <code>
		///   var publishsetsummary = new PublishSetSummary();
		///   var object = await publishsetsummary.AddPublishSetItemsAsync( itemsToPublish,  code,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<object> AddPublishSetItemsAsync(List<Mozu.Api.Contracts.Content.AddOrDeletePublishItem> itemsToPublish, string code, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<object> response;
			var client = Mozu.Api.Clients.Content.PublishSetSummaryClient.AddPublishSetItemsClient( itemsToPublish,  code,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


	}

}


