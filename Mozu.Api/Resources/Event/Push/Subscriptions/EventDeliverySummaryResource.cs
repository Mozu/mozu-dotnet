
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using System.Threading;

namespace Mozu.Api.Resources.Event.Push.Subscriptions
{
	/// <summary>
	/// Provides details for each attempted delivery of the event to the endpoint.
	/// </summary>
	public partial class EventDeliverySummaryResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;

		
		public EventDeliverySummaryResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		public EventDeliverySummaryResource CloneWithApiContext(Action<IApiContext> contextModification) 
		{
			return new EventDeliverySummaryResource(_apiContext.CloneWith(contextModification));
		}

				

		/// <summary>
		/// 
		/// </summary>
		/// <param name="processId"></param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <param name="subscriptionId">Unique identifier for a subscription, such as subscribing tenants for an event or to receive a notification.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Event.EventDeliverySummary"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var eventdeliverysummary = new EventDeliverySummary();
		///   var eventDeliverySummary = await eventdeliverysummary.GetDeliveryAttemptSummaryAsync( subscriptionId,  processId,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.Event.EventDeliverySummary> GetDeliveryAttemptSummaryAsync(string subscriptionId, int? processId =  null, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Event.EventDeliverySummary> response;
			var client = Mozu.Api.Clients.Event.Push.Subscriptions.EventDeliverySummaryClient.GetDeliveryAttemptSummaryClient( subscriptionId,  processId,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


		/// <summary>
		/// 
		/// </summary>
		/// <param name="filter">A set of filter expressions representing the search parameters for a query. This parameter is optional. Refer to [Sorting and Filtering](../../../../Developer/api-guides/sorting-filtering.htm) for a list of supported filters.</param>
		/// <param name="pageSize">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with this parameter set to 25, to get the 51st through the 75th items, set startIndex to 50.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional. Refer to [Sorting and Filtering](../../../../Developer/api-guides/sorting-filtering.htm) for more information.</param>
		/// <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with pageSize set to 25, to get the 51st through the 75th items, set this parameter to 50.</param>
		/// <param name="subscriptionId">Unique identifier for a subscription, such as subscribing tenants for an event or to receive a notification.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Event.EventDeliverySummaryCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var eventdeliverysummary = new EventDeliverySummary();
		///   var eventDeliverySummaryCollection = await eventdeliverysummary.GetDeliveryAttemptSummariesAsync( subscriptionId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.Event.EventDeliverySummaryCollection> GetDeliveryAttemptSummariesAsync(string subscriptionId, int? startIndex =  null, int? pageSize =  null, string sortBy =  null, string filter =  null, string responseFields =  null, CancellationToken ct = default(CancellationToken))
		{
			MozuClient<Mozu.Api.Contracts.Event.EventDeliverySummaryCollection> response;
			var client = Mozu.Api.Clients.Event.Push.Subscriptions.EventDeliverySummaryClient.GetDeliveryAttemptSummariesClient( subscriptionId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync(ct).ConfigureAwait(false);
			return await response.ResultAsync();

		}


	}

}


