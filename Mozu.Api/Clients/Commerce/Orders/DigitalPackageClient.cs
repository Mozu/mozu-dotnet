
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using System.Threading;

namespace Mozu.Api.Clients.Commerce.Orders
{
	/// <summary>
	/// A digital package is a package in a digital format.
	/// </summary>
	public partial class DigitalPackageClient 	{
		
		/// <summary>
		/// 
		/// </summary>
		/// <param name="digitalPackageId">This parameter supplies package ID to get fulfillment actions for the digital package.</param>
		/// <param name="orderId">This parameter provides the unique identifier of the order on which to get a list of available actions.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{List{string}}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetAvailableDigitalPackageFulfillmentActions( orderId,  digitalPackageId);
		///   var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<List<string>> GetAvailableDigitalPackageFulfillmentActionsClient(string orderId, string digitalPackageId)
		{
			var url = Mozu.Api.Urls.Commerce.Orders.DigitalPackageUrl.GetAvailableDigitalPackageFulfillmentActionsUrl(orderId, digitalPackageId);
			const string verb = "GET";
			var mozuClient = new MozuClient<List<string>>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="digitalPackageId">This parameter provides the digital package Id.</param>
		/// <param name="orderId">This parameter provides the unique identifier of the order with which to associate the digital package.</param>
		/// <param name="responseFields"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetDigitalPackage( orderId,  digitalPackageId,  responseFields);
		///   var digitalPackageClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage> GetDigitalPackageClient(string orderId, string digitalPackageId, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Orders.DigitalPackageUrl.GetDigitalPackageUrl(orderId, digitalPackageId, responseFields);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="orderId">The orderID is a required paramter for the digitalpackages operation. The orderId is a unique identifier of the order with which to associate the digital package.</param>
		/// <param name="responseFields"></param>
		/// <param name="digitalPackage">The digitalPackage parameter is a required parameter for the CreateDigitalPackages operation. The digitalPackage is the digital package to create and add to the order.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=CreateDigitalPackage( digitalPackage,  orderId,  responseFields);
		///   var digitalPackageClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage> CreateDigitalPackageClient(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage digitalPackage, string orderId, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Orders.DigitalPackageUrl.CreateDigitalPackageUrl(orderId, responseFields);
			const string verb = "POST";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage>(digitalPackage);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="digitalPackageId">This parameter specifies the digital package to update in the order.</param>
		/// <param name="orderId">This parameter provides the unique identifier of the order with which to associate the digital package.</param>
		/// <param name="responseFields"></param>
		/// <param name="digitalPackage">This parameter provides the package content to update in the order.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=UpdateDigitalPackage( digitalPackage,  orderId,  digitalPackageId,  responseFields);
		///   var digitalPackageClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage> UpdateDigitalPackageClient(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage digitalPackage, string orderId, string digitalPackageId, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Orders.DigitalPackageUrl.UpdateDigitalPackageUrl(orderId, digitalPackageId, responseFields);
			const string verb = "PUT";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage>(digitalPackage);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="digitalPackageId">The digitalPackage ID is unique package ID to update on the order.</param>
		/// <param name="orderId">The orderId is unique identifier of the order with which to associate the package.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=DeleteDigitalPackage( orderId,  digitalPackageId);
		///mozuClient.WithBaseAddress(url).Execute();
		/// </code>
		/// </example>
		public static MozuClient DeleteDigitalPackageClient(string orderId, string digitalPackageId)
		{
			var url = Mozu.Api.Urls.Commerce.Orders.DigitalPackageUrl.DeleteDigitalPackageUrl(orderId, digitalPackageId);
			const string verb = "DELETE";
			var mozuClient = new MozuClient()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}


	}

}


