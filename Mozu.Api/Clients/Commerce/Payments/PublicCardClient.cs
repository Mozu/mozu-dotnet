
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using System.Threading;

namespace Mozu.Api.Clients.Commerce.Payments
{
	/// <summary>
	/// These APIs are used to register, update, and remove customer credit cards. The Create operation is the most frequently used one - when paying for an order using a credit card, the storefront first takes the full credit card information and calls Create on the PaymentService to store the card. The PaymentService responds with a SyncResponse containing a card ID. Any further references to that credit card are done using the card ID so that eCommerce doesn't have the full credit card info in hand. With the card ID, the storefront can call CreatePaymentAction (either for [single-ship](../../orders/operations/createpaymentaction.htm) or [multi-ship](../../checkouts/operations/createpaymentaction.htm)) to add a payment for that credit card to the order/checkout. 
	/// </summary>
	public partial class PublicCardClient 	{
		
		/// <summary>
		/// 
		/// </summary>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <param name="request"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.PaymentService.Response.SyncResponse"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=Create( request,  responseFields);
		///   var syncResponseClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.PaymentService.Response.SyncResponse> CreateClient(Mozu.Api.Contracts.PaymentService.PublicCard request, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Payments.PublicCardUrl.CreateUrl(responseFields);
			const string verb = "POST";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.PaymentService.Response.SyncResponse>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<Mozu.Api.Contracts.PaymentService.PublicCard>(request);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <param name="balanceRequest"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.PaymentService.Response.SyncResponse"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetGiftCardBalance( balanceRequest,  cardId,  responseFields);
		///   var syncResponseClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.PaymentService.Response.SyncResponse> GetGiftCardBalanceClient(Mozu.Api.Contracts.PaymentService.Request.GetGiftCardBalanceRequest balanceRequest, string cardId, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Payments.PublicCardUrl.GetGiftCardBalanceUrl(cardId, responseFields);
			const string verb = "POST";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.PaymentService.Response.SyncResponse>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<Mozu.Api.Contracts.PaymentService.Request.GetGiftCardBalanceRequest>(balanceRequest);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <param name="balanceRequest">The current balance of the card.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.PaymentService.Response.SyncResponse"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetUnregisteredGiftCardBalance( balanceRequest,  responseFields);
		///   var syncResponseClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.PaymentService.Response.SyncResponse> GetUnregisteredGiftCardBalanceClient(Mozu.Api.Contracts.PaymentService.Request.GetGiftCardBalanceRequest balanceRequest, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Payments.PublicCardUrl.GetUnregisteredGiftCardBalanceUrl(responseFields);
			const string verb = "POST";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.PaymentService.Response.SyncResponse>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<Mozu.Api.Contracts.PaymentService.Request.GetGiftCardBalanceRequest>(balanceRequest);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <param name="request"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.PaymentService.Response.SyncResponse"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=Update( request,  cardId,  responseFields);
		///   var syncResponseClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.PaymentService.Response.SyncResponse> UpdateClient(Mozu.Api.Contracts.PaymentService.PublicCard request, string cardId, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Payments.PublicCardUrl.UpdateUrl(cardId, responseFields);
			const string verb = "PUT";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.PaymentService.Response.SyncResponse>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<Mozu.Api.Contracts.PaymentService.PublicCard>(request);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=Delete( cardId);
		///mozuClient.WithBaseAddress(url).Execute();
		/// </code>
		/// </example>
		public static MozuClient DeleteClient(string cardId)
		{
			var url = Mozu.Api.Urls.Commerce.Payments.PublicCardUrl.DeleteUrl(cardId);
			const string verb = "DELETE";
			var mozuClient = new MozuClient()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}


	}

}


