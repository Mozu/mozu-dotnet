
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using System.Threading;

namespace Mozu.Api.Clients.Commerce.Catalog.Admin
{
	/// <summary>
	/// Manage the currency localization rules and exchange rates for any of the currencies that are supported for placing orders in.
	/// </summary>
	public partial class CurrencyLocalizationClient 	{
		
		/// <summary>
		/// 
		/// </summary>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.ProductAdmin.CurrencyLocalizationCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetCurrencyLocalizations( responseFields);
		///   var currencyLocalizationCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.ProductAdmin.CurrencyLocalizationCollection> GetCurrencyLocalizationsClient(string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.CurrencyLocalizationUrl.GetCurrencyLocalizationsUrl(responseFields);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.ProductAdmin.CurrencyLocalizationCollection>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="currencyCode">The three character ISOÂ currency code, such as USDÂ for US Dollars.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <param name="toCurrencyCode">The code of the new currency that the original currency's equivalent is being calculated to.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.ProductAdmin.CurrencyExchangeRate"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetCurrencyExchangeRate( currencyCode,  toCurrencyCode,  responseFields);
		///   var currencyExchangeRateClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.ProductAdmin.CurrencyExchangeRate> GetCurrencyExchangeRateClient(string currencyCode, string toCurrencyCode, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.CurrencyLocalizationUrl.GetCurrencyExchangeRateUrl(currencyCode, toCurrencyCode, responseFields);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.ProductAdmin.CurrencyExchangeRate>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="currencyCode">The three character ISOÂ currency code, such as USDÂ for US Dollars.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.ProductAdmin.CurrencyExchangeRateCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetCurrencyExchangeRates( currencyCode,  responseFields);
		///   var currencyExchangeRateCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.ProductAdmin.CurrencyExchangeRateCollection> GetCurrencyExchangeRatesClient(string currencyCode, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.CurrencyLocalizationUrl.GetCurrencyExchangeRatesUrl(currencyCode, responseFields);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.ProductAdmin.CurrencyExchangeRateCollection>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="currencyCode">The three character ISOÂ currency code, such as USDÂ for US Dollars.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.ProductAdmin.CurrencyLocalization"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetCurrencyLocalization( currencyCode,  responseFields);
		///   var currencyLocalizationClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.ProductAdmin.CurrencyLocalization> GetCurrencyLocalizationClient(string currencyCode, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.CurrencyLocalizationUrl.GetCurrencyLocalizationUrl(currencyCode, responseFields);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.ProductAdmin.CurrencyLocalization>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <param name="currencyLocalization">The currency localization strategies being added to the currency data.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.ProductAdmin.CurrencyLocalization"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=AddCurrencyLocalization( currencyLocalization,  responseFields);
		///   var currencyLocalizationClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.ProductAdmin.CurrencyLocalization> AddCurrencyLocalizationClient(Mozu.Api.Contracts.ProductAdmin.CurrencyLocalization currencyLocalization, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.CurrencyLocalizationUrl.AddCurrencyLocalizationUrl(responseFields);
			const string verb = "POST";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.ProductAdmin.CurrencyLocalization>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<Mozu.Api.Contracts.ProductAdmin.CurrencyLocalization>(currencyLocalization);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="currencyCode">The three character ISOÂ currency code, such as USDÂ for US Dollars.</param>
		/// <param name="currencyExchangeRates">All of the exchange rates being provided.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="System.IO.Stream"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=AddCurrencyExchangeRates( currencyExchangeRates,  currencyCode);
		///   var streamClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<System.IO.Stream> AddCurrencyExchangeRatesClient(List<Mozu.Api.Contracts.ProductAdmin.CurrencyExchangeRate> currencyExchangeRates, string currencyCode)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.CurrencyLocalizationUrl.AddCurrencyExchangeRatesUrl(currencyCode);
			const string verb = "POST";
			var mozuClient = new MozuClient<System.IO.Stream>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<List<Mozu.Api.Contracts.ProductAdmin.CurrencyExchangeRate>>(currencyExchangeRates);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="currencyCode">The three character ISOÂ currency code, such as USDÂ for US Dollars.</param>
		/// <param name="currencyExchangeRates"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="System.IO.Stream"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=UpdateCurrencyExchangeRates( currencyExchangeRates,  currencyCode);
		///   var streamClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<System.IO.Stream> UpdateCurrencyExchangeRatesClient(List<Mozu.Api.Contracts.ProductAdmin.CurrencyExchangeRate> currencyExchangeRates, string currencyCode)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.CurrencyLocalizationUrl.UpdateCurrencyExchangeRatesUrl(currencyCode);
			const string verb = "PUT";
			var mozuClient = new MozuClient<System.IO.Stream>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<List<Mozu.Api.Contracts.ProductAdmin.CurrencyExchangeRate>>(currencyExchangeRates);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="currencyCode">The three character ISOÂ currency code, such as USDÂ for US Dollars.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <param name="currencyLocalization">The currency localization information being updated.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.ProductAdmin.CurrencyLocalization"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=UpdateCurrencyLocalization( currencyLocalization,  currencyCode,  responseFields);
		///   var currencyLocalizationClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.ProductAdmin.CurrencyLocalization> UpdateCurrencyLocalizationClient(Mozu.Api.Contracts.ProductAdmin.CurrencyLocalization currencyLocalization, string currencyCode, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.CurrencyLocalizationUrl.UpdateCurrencyLocalizationUrl(currencyCode, responseFields);
			const string verb = "PUT";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.ProductAdmin.CurrencyLocalization>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<Mozu.Api.Contracts.ProductAdmin.CurrencyLocalization>(currencyLocalization);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="currencyCode">The three character ISOÂ currency code, such as USDÂ for US Dollars.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="System.IO.Stream"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=DeleteCurrencyLocalization( currencyCode);
		///   var streamClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<System.IO.Stream> DeleteCurrencyLocalizationClient(string currencyCode)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.CurrencyLocalizationUrl.DeleteCurrencyLocalizationUrl(currencyCode);
			const string verb = "DELETE";
			var mozuClient = new MozuClient<System.IO.Stream>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="currencyCode">The three character ISOÂ currency code, such as USDÂ for US Dollars.</param>
		/// <param name="toCurrencyCode">The code of the new currency that the original currency's equivalent is being calculated to.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="System.IO.Stream"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=DeleteCurrencyExchangeRate( currencyCode,  toCurrencyCode);
		///   var streamClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<System.IO.Stream> DeleteCurrencyExchangeRateClient(string currencyCode, string toCurrencyCode)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.CurrencyLocalizationUrl.DeleteCurrencyExchangeRateUrl(currencyCode, toCurrencyCode);
			const string verb = "DELETE";
			var mozuClient = new MozuClient<System.IO.Stream>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}


	}

}


