
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using System.Threading;

namespace Mozu.Api.Clients.Commerce.Catalog.Admin
{
	/// <summary>
	/// 
	/// </summary>
	public partial class PriceListClient 	{
		
		/// <summary>
		/// 
		/// </summary>
		/// <param name="filter"></param>
		/// <param name="pageSize"></param>
		/// <param name="responseFields"></param>
		/// <param name="sortBy"></param>
		/// <param name="startIndex"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.ProductAdmin.PriceListCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetPriceLists( startIndex,  pageSize,  sortBy,  filter,  responseFields);
		///   var priceListCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.ProductAdmin.PriceListCollection> GetPriceListsClient(int? startIndex =  null, int? pageSize =  null, string sortBy =  null, string filter =  null, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.PriceListUrl.GetPriceListsUrl(startIndex, pageSize, sortBy, filter, responseFields);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.ProductAdmin.PriceListCollection>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="priceListCode"></param>
		/// <param name="responseFields"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.ProductAdmin.PriceList"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetPriceList( priceListCode,  responseFields);
		///   var priceListClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.ProductAdmin.PriceList> GetPriceListClient(string priceListCode, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.PriceListUrl.GetPriceListUrl(priceListCode, responseFields);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.ProductAdmin.PriceList>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="responseFields"></param>
		/// <param name="priceList"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.ProductAdmin.PriceList"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=AddPriceList( priceList,  responseFields);
		///   var priceListClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.ProductAdmin.PriceList> AddPriceListClient(Mozu.Api.Contracts.ProductAdmin.PriceList priceList, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.PriceListUrl.AddPriceListUrl(responseFields);
			const string verb = "POST";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.ProductAdmin.PriceList>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<Mozu.Api.Contracts.ProductAdmin.PriceList>(priceList);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="invalidateCache"></param>
		/// <param name="publishEvents"></param>
		/// <param name="priceListEntriesIn"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=BulkAddPriceListEntries( priceListEntriesIn,  publishEvents,  invalidateCache);
		///mozuClient.WithBaseAddress(url).Execute();
		/// </code>
		/// </example>
		public static MozuClient BulkAddPriceListEntriesClient(List<Mozu.Api.Contracts.ProductAdmin.PriceListEntry> priceListEntriesIn, bool? publishEvents =  null, bool? invalidateCache =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.PriceListUrl.BulkAddPriceListEntriesUrl(publishEvents, invalidateCache);
			const string verb = "POST";
			var mozuClient = new MozuClient()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<List<Mozu.Api.Contracts.ProductAdmin.PriceListEntry>>(priceListEntriesIn);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="invalidateCache"></param>
		/// <param name="publishEvents"></param>
		/// <param name="priceListEntriesIn"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=BulkDeletePriceListEntries( priceListEntriesIn,  publishEvents,  invalidateCache);
		///mozuClient.WithBaseAddress(url).Execute();
		/// </code>
		/// </example>
		public static MozuClient BulkDeletePriceListEntriesClient(List<Mozu.Api.Contracts.ProductAdmin.PriceListEntry> priceListEntriesIn, bool? publishEvents =  null, bool? invalidateCache =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.PriceListUrl.BulkDeletePriceListEntriesUrl(publishEvents, invalidateCache);
			const string verb = "POST";
			var mozuClient = new MozuClient()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<List<Mozu.Api.Contracts.ProductAdmin.PriceListEntry>>(priceListEntriesIn);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="invalidateCache"></param>
		/// <param name="publishEvents"></param>
		/// <param name="priceListEntriesIn"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=BulkUpdatePriceListEntries( priceListEntriesIn,  publishEvents,  invalidateCache);
		///mozuClient.WithBaseAddress(url).Execute();
		/// </code>
		/// </example>
		public static MozuClient BulkUpdatePriceListEntriesClient(List<Mozu.Api.Contracts.ProductAdmin.PriceListEntry> priceListEntriesIn, bool? publishEvents =  null, bool? invalidateCache =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.PriceListUrl.BulkUpdatePriceListEntriesUrl(publishEvents, invalidateCache);
			const string verb = "POST";
			var mozuClient = new MozuClient()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<List<Mozu.Api.Contracts.ProductAdmin.PriceListEntry>>(priceListEntriesIn);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="priceListCode"></param>
		/// <param name="responseFields"></param>
		/// <param name="priceList"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.ProductAdmin.PriceList"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=UpdatePriceList( priceList,  priceListCode,  responseFields);
		///   var priceListClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.ProductAdmin.PriceList> UpdatePriceListClient(Mozu.Api.Contracts.ProductAdmin.PriceList priceList, string priceListCode, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.PriceListUrl.UpdatePriceListUrl(priceListCode, responseFields);
			const string verb = "PUT";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.ProductAdmin.PriceList>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<Mozu.Api.Contracts.ProductAdmin.PriceList>(priceList);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="cascadeDeleteEntries"></param>
		/// <param name="priceListCode"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=DeletePriceList( priceListCode,  cascadeDeleteEntries);
		///mozuClient.WithBaseAddress(url).Execute();
		/// </code>
		/// </example>
		public static MozuClient DeletePriceListClient(string priceListCode, bool? cascadeDeleteEntries =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.PriceListUrl.DeletePriceListUrl(priceListCode, cascadeDeleteEntries);
			const string verb = "DELETE";
			var mozuClient = new MozuClient()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}


	}

}


