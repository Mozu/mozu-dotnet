
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using System.Threading;

namespace Mozu.Api.Clients.Commerce.Catalog.Admin.Couponsets
{
	/// <summary>
	/// Use the Coupons subresource to manage coupons within manual coupon sets.
	/// </summary>
	public partial class CouponClient 	{
		
		/// <summary>
		/// 
		/// </summary>
		/// <param name="couponCode">Code associated with the coupon to remove from the cart.</param>
		/// <param name="couponSetCode">The unique identifier of the coupon set that the coupon belongs to.</param>
		/// <param name="includeCounts">Specifies whether to return the redemptionCount property in the response body object.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.ProductAdmin.Coupon"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetCoupon( couponSetCode,  couponCode,  includeCounts,  responseFields);
		///   var couponClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.ProductAdmin.Coupon> GetCouponClient(string couponSetCode, string couponCode, bool? includeCounts =  null, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.Couponsets.CouponUrl.GetCouponUrl(couponSetCode, couponCode, includeCounts, responseFields);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.ProductAdmin.Coupon>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="couponSetCode">The unique identifier of the coupon set that the coupons belongs to.</param>
		/// <param name="filter">A set of filter expressions representing the search parameters for a query. This parameter is optional. Refer to [Sorting and Filtering](../../../../Developer/api-guides/sorting-filtering.htm) for a list of supported filters.</param>
		/// <param name="includeCounts">Specifies whether to include the redemptionCount property in the response body object.</param>
		/// <param name="pageSize">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with this parameter set to 25, to get the 51st through the 75th items, set startIndex to 50.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional. Refer to [Sorting and Filtering](../../../../Developer/api-guides/sorting-filtering.htm) for more information.</param>
		/// <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with pageSize set to 25, to get the 51st through the 75th items, set this parameter to 50.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.ProductAdmin.CouponCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetCoupons( couponSetCode,  startIndex,  pageSize,  sortBy,  filter,  includeCounts,  responseFields);
		///   var couponCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.ProductAdmin.CouponCollection> GetCouponsClient(string couponSetCode, int? startIndex =  null, int? pageSize =  null, string sortBy =  null, string filter =  null, bool? includeCounts =  null, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.Couponsets.CouponUrl.GetCouponsUrl(couponSetCode, startIndex, pageSize, sortBy, filter, includeCounts, responseFields);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.ProductAdmin.CouponCollection>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="couponSetCode">The unique identifier of the coupon set.</param>
		/// <param name="coupons">The details necessary to assign the discount to a coupon set, including .</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=AddCoupons( coupons,  couponSetCode);
		///mozuClient.WithBaseAddress(url).Execute();
		/// </code>
		/// </example>
		public static MozuClient AddCouponsClient(List<Mozu.Api.Contracts.ProductAdmin.Coupon> coupons, string couponSetCode)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.Couponsets.CouponUrl.AddCouponsUrl(couponSetCode);
			const string verb = "POST";
			var mozuClient = new MozuClient()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<List<Mozu.Api.Contracts.ProductAdmin.Coupon>>(coupons);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="couponSetCode">The unique identifier of the coupon set that the coupon belongs to.</param>
		/// <param name="couponCodes">The unique identifiers of the coupons to delete.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=DeleteCoupons( couponCodes,  couponSetCode);
		///mozuClient.WithBaseAddress(url).Execute();
		/// </code>
		/// </example>
		public static MozuClient DeleteCouponsClient(List<string> couponCodes, string couponSetCode)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.Couponsets.CouponUrl.DeleteCouponsUrl(couponSetCode);
			const string verb = "POST";
			var mozuClient = new MozuClient()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody(couponCodes);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="couponCode">Code associated with the coupon to remove from the cart.</param>
		/// <param name="couponSetCode">The unique identifier of the coupon set that the coupon belongs to.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=DeleteCoupon( couponSetCode,  couponCode);
		///mozuClient.WithBaseAddress(url).Execute();
		/// </code>
		/// </example>
		public static MozuClient DeleteCouponClient(string couponSetCode, string couponCode)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.Couponsets.CouponUrl.DeleteCouponUrl(couponSetCode, couponCode);
			const string verb = "DELETE";
			var mozuClient = new MozuClient()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}


	}

}


