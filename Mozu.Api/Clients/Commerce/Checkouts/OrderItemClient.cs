
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using System.Threading;

namespace Mozu.Api.Clients.Commerce.Checkouts
{
	/// <summary>
	/// 
	/// </summary>
	public partial class OrderItemClient 	{
		
		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId"></param>
		/// <param name="itemId"></param>
		/// <param name="responseFields"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetItem( checkoutId,  itemId,  responseFields);
		///   var orderItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem> GetItemClient(string checkoutId, string itemId, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Checkouts.OrderItemUrl.GetItemUrl(checkoutId, itemId, responseFields);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId"></param>
		/// <param name="lineId"></param>
		/// <param name="responseFields"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetItemViaLineId( checkoutId,  lineId,  responseFields);
		///   var orderItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem> GetItemViaLineIdClient(string checkoutId, int lineId, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Checkouts.OrderItemUrl.GetItemViaLineIdUrl(checkoutId, lineId, responseFields);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId"></param>
		/// <param name="responseFields"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItemCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetItems( checkoutId,  responseFields);
		///   var orderItemCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItemCollection> GetItemsClient(string checkoutId, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Checkouts.OrderItemUrl.GetItemsUrl(checkoutId, responseFields);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItemCollection>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId"></param>
		/// <param name="destinationId"></param>
		/// <param name="itemId"></param>
		/// <param name="responseFields"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=UpdateItemDestination( checkoutId,  itemId,  destinationId,  responseFields);
		///   var checkoutClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout> UpdateItemDestinationClient(string checkoutId, string itemId, string destinationId, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Checkouts.OrderItemUrl.UpdateItemDestinationUrl(checkoutId, itemId, destinationId, responseFields);
			const string verb = "POST";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId"></param>
		/// <param name="itemId"></param>
		/// <param name="quantity"></param>
		/// <param name="responseFields"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=SplitItem( checkoutId,  itemId,  quantity,  responseFields);
		///   var checkoutClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout> SplitItemClient(string checkoutId, string itemId, int? quantity =  null, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Checkouts.OrderItemUrl.SplitItemUrl(checkoutId, itemId, quantity, responseFields);
			const string verb = "POST";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId"></param>
		/// <param name="responseFields"></param>
		/// <param name="itemsForDestination"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=BulkUpdateItemDestinations( itemsForDestination,  checkoutId,  responseFields);
		///   var checkoutClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout> BulkUpdateItemDestinationsClient(List<Mozu.Api.Contracts.CommerceRuntime.Checkouts.ItemsForDestination> itemsForDestination, string checkoutId, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Checkouts.OrderItemUrl.BulkUpdateItemDestinationsUrl(checkoutId, responseFields);
			const string verb = "POST";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<List<Mozu.Api.Contracts.CommerceRuntime.Checkouts.ItemsForDestination>>(itemsForDestination);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId"></param>
		/// <param name="responseFields"></param>
		/// <param name="skipInventoryCheck"></param>
		/// <param name="item"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=CreateItem( item,  checkoutId,  skipInventoryCheck,  responseFields);
		///   var checkoutClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout> CreateItemClient(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem item, string checkoutId, bool? skipInventoryCheck =  null, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Checkouts.OrderItemUrl.CreateItemUrl(checkoutId, skipInventoryCheck, responseFields);
			const string verb = "POST";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem>(item);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId"></param>
		/// <param name="dutyAmount"></param>
		/// <param name="itemId"></param>
		/// <param name="responseFields"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=UpdateItemDuty( checkoutId,  itemId,  dutyAmount,  responseFields);
		///   var checkoutClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout> UpdateItemDutyClient(string checkoutId, string itemId, decimal dutyAmount, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Checkouts.OrderItemUrl.UpdateItemDutyUrl(checkoutId, itemId, dutyAmount, responseFields);
			const string verb = "PUT";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId"></param>
		/// <param name="itemId"></param>
		/// <param name="responseFields"></param>
		/// <param name="item"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=UpdateItemFulfillment( item,  checkoutId,  itemId,  responseFields);
		///   var checkoutClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout> UpdateItemFulfillmentClient(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem item, string checkoutId, string itemId, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Checkouts.OrderItemUrl.UpdateItemFulfillmentUrl(checkoutId, itemId, responseFields);
			const string verb = "PUT";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem>(item);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId"></param>
		/// <param name="itemId"></param>
		/// <param name="price"></param>
		/// <param name="responseFields"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=UpdateItemProductPrice( checkoutId,  itemId,  price,  responseFields);
		///   var checkoutClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout> UpdateItemProductPriceClient(string checkoutId, string itemId, decimal price, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Checkouts.OrderItemUrl.UpdateItemProductPriceUrl(checkoutId, itemId, price, responseFields);
			const string verb = "PUT";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId"></param>
		/// <param name="itemId"></param>
		/// <param name="quantity"></param>
		/// <param name="responseFields"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=UpdateQuantity( checkoutId,  itemId,  quantity,  responseFields);
		///   var checkoutClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout> UpdateQuantityClient(string checkoutId, string itemId, int quantity, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Checkouts.OrderItemUrl.UpdateQuantityUrl(checkoutId, itemId, quantity, responseFields);
			const string verb = "PUT";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId"></param>
		/// <param name="itemId"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=DeleteItem( checkoutId,  itemId);
		///   var checkoutClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout> DeleteItemClient(string checkoutId, string itemId)
		{
			var url = Mozu.Api.Urls.Commerce.Checkouts.OrderItemUrl.DeleteItemUrl(checkoutId, itemId);
			const string verb = "DELETE";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}


	}

}


