
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;
using System.Threading;

namespace Mozu.Api.Clients.Commerce
{
	/// <summary>
	/// Use this resource to track a shopper's order items and their intended destinations on sites that have the multiple shipment feature enabled. The Checkouts resource is active until the shopper submits the order, at which point one or many orders are created based on the data contained in the Checkouts resource.To learn more about this resource and the ability to ship items to multiple addresses, refer to the [Multiple Shipments API Overview](https://www.mozu.com/docs/Developer/api-guides/multi-ship.htm) topic.
	/// </summary>
	public partial class CheckoutClient 	{
		
		/// <summary>
		/// 
		/// </summary>
		/// <param name="filter">A set of filter expressions representing the search parameters for a query. This parameter is optional. Refer to [Sorting and Filtering](../../../../Developer/api-guides/sorting-filtering.htm) for a list of supported filters.</param>
		/// <param name="pageSize">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with this parameter set to 25, to get the 51st through the 75th items, set startIndex to 50.</param>
		/// <param name="q">A list of order search terms (not phrases) to use in the query when searching across order number and the name or email of the billing contact. When entering, separate multiple search terms with a space character.</param>
		/// <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional. Refer to [Sorting and Filtering](../../../../Developer/api-guides/sorting-filtering.htm) for more information.</param>
		/// <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with pageSize set to 25, to get the 51st through the 75th items, set this parameter to 50.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Checkouts.CheckoutCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetCheckouts( startIndex,  pageSize,  sortBy,  filter,  q,  qLimit,  responseFields);
		///   var checkoutCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.CheckoutCollection> GetCheckoutsClient(int? startIndex =  null, int? pageSize =  null, string sortBy =  null, string filter =  null, string q =  null, int? qLimit =  null, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.CheckoutUrl.GetCheckoutsUrl(startIndex, pageSize, sortBy, filter, q, qLimit, responseFields);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.CheckoutCollection>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId">The unique identifier of the checkout.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{List{string}}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetAvailableActions( checkoutId);
		///   var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<List<string>> GetAvailableActionsClient(string checkoutId)
		{
			var url = Mozu.Api.Urls.Commerce.CheckoutUrl.GetAvailableActionsUrl(checkoutId);
			const string verb = "GET";
			var mozuClient = new MozuClient<List<string>>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId">The unique identifier of the checkout.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{List{<see cref="Mozu.Api.Contracts.CommerceRuntime.Checkouts.CheckoutGroupRates"/>}}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetAvailableShippingMethods( checkoutId);
		///   var checkoutGroupRatesClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<List<Mozu.Api.Contracts.CommerceRuntime.Checkouts.CheckoutGroupRates>> GetAvailableShippingMethodsClient(string checkoutId)
		{
			var url = Mozu.Api.Urls.Commerce.CheckoutUrl.GetAvailableShippingMethodsUrl(checkoutId);
			const string verb = "GET";
			var mozuClient = new MozuClient<List<Mozu.Api.Contracts.CommerceRuntime.Checkouts.CheckoutGroupRates>>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId">The unique identifier of the checkout.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetCheckout( checkoutId,  responseFields);
		///   var checkoutClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout> GetCheckoutClient(string checkoutId, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.CheckoutUrl.GetCheckoutUrl(checkoutId, responseFields);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="cartId">Identifier of the cart to delete.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=CreateCheckoutFromCart( cartId,  responseFields);
		///   var checkoutClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout> CreateCheckoutFromCartClient(string cartId, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.CheckoutUrl.CreateCheckoutFromCartUrl(cartId, responseFields);
			const string verb = "POST";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId">The unique identifier of the checkout.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <param name="action">The name of the action to perform.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=PerformCheckoutAction( action,  checkoutId,  responseFields);
		///   var checkoutClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout> PerformCheckoutActionClient(Mozu.Api.Contracts.CommerceRuntime.Checkouts.CheckoutAction action, string checkoutId, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.CheckoutUrl.PerformCheckoutActionUrl(checkoutId, responseFields);
			const string verb = "POST";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<Mozu.Api.Contracts.CommerceRuntime.Checkouts.CheckoutAction>(action);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId">The unique identifier of the checkout.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=ResendCheckoutConfirmationEmail( checkoutId);
		///mozuClient.WithBaseAddress(url).Execute();
		/// </code>
		/// </example>
		public static MozuClient ResendCheckoutConfirmationEmailClient(string checkoutId)
		{
			var url = Mozu.Api.Urls.Commerce.CheckoutUrl.ResendCheckoutConfirmationEmailUrl(checkoutId);
			const string verb = "POST";
			var mozuClient = new MozuClient()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId">The unique identifier of the checkout.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <param name="groupShippingMethods">The shipping methods for the grouping.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=SetShippingMethods( groupShippingMethods,  checkoutId,  responseFields);
		///   var checkoutClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout> SetShippingMethodsClient(List<Mozu.Api.Contracts.CommerceRuntime.Checkouts.CheckoutGroupShippingMethod> groupShippingMethods, string checkoutId, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.CheckoutUrl.SetShippingMethodsUrl(checkoutId, responseFields);
			const string verb = "POST";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<List<Mozu.Api.Contracts.CommerceRuntime.Checkouts.CheckoutGroupShippingMethod>>(groupShippingMethods);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId">The unique identifier of the checkout.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <param name="checkout">The checkout object.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=UpdateCheckout( checkout,  checkoutId,  responseFields);
		///   var checkoutClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout> UpdateCheckoutClient(Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout checkout, string checkoutId, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.CheckoutUrl.UpdateCheckoutUrl(checkoutId, responseFields);
			const string verb = "POST";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout>(checkout);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId">The unique identifier of the checkout.</param>
		/// <param name="digitalWalletType">The type of digital wallet.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <param name="digitalWallet">The digital wallet object.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=ProcessDigitalWallet( digitalWallet,  checkoutId,  digitalWalletType,  responseFields);
		///   var checkoutClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout> ProcessDigitalWalletClient(Mozu.Api.Contracts.CommerceRuntime.Orders.DigitalWallet digitalWallet, string checkoutId, string digitalWalletType, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.CheckoutUrl.ProcessDigitalWalletUrl(checkoutId, digitalWalletType, responseFields);
			const string verb = "PUT";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<Mozu.Api.Contracts.CommerceRuntime.Orders.DigitalWallet>(digitalWallet);
			return mozuClient;

		}

		/// <summary>
		/// 
		/// </summary>
		/// <param name="checkoutId">The unique identifier of the checkout.</param>
		/// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
		/// <param name="priceListCode">The unique identifier of the price list that applies to the checkout, if applicable.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=ChangeCheckoutPriceList( priceListCode,  checkoutId,  responseFields);
		///   var checkoutClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout> ChangeCheckoutPriceListClient(string priceListCode, string checkoutId, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.CheckoutUrl.ChangeCheckoutPriceListUrl(checkoutId, responseFields);
			const string verb = "PUT";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Checkouts.Checkout>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody(priceListCode);
			return mozuClient;

		}


	}

}


