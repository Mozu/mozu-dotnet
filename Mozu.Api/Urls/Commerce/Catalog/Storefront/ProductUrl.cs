
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

namespace Mozu.Api.Urls.Commerce.Catalog.Storefront
{
	public partial class ProductUrl 
	{

		/// <summary>
        /// Get Resource Url for GetProducts
        /// </summary>
        /// <param name="cursorMark"></param>
        /// <param name="defaultSort"></param>
        /// <param name="filter"></param>
        /// <param name="pageSize">Used to page results from a query. Indicates the maximum number of entities to return from a single query. Default value: 20. Maximum value: 200.</param>
        /// <param name="responseFields"></param>
        /// <param name="responseOptions"></param>
        /// <param name="sortBy"></param>
        /// <param name="startIndex"></param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl GetProductsUrl(string filter =  null, int? startIndex =  null, int? pageSize =  null, string sortBy =  null, string responseOptions =  null, string cursorMark =  null, string defaultSort =  null, string responseFields =  null)
		{
			var url = "/api/commerce/catalog/storefront/products/?filter={filter}&startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&responseOptions={responseOptions}&cursorMark={cursorMark}&defaultSort={defaultSort}&responseFields={responseFields}";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "cursorMark", cursorMark);
			mozuUrl.FormatUrl( "defaultSort", defaultSort);
			mozuUrl.FormatUrl( "filter", filter);
			mozuUrl.FormatUrl( "pageSize", pageSize);
			mozuUrl.FormatUrl( "responseFields", responseFields);
			mozuUrl.FormatUrl( "responseOptions", responseOptions);
			mozuUrl.FormatUrl( "sortBy", sortBy);
			mozuUrl.FormatUrl( "startIndex", startIndex);
			return mozuUrl;
		}

		/// <summary>
        /// Get Resource Url for GetProductInventory
        /// </summary>
        /// <param name="locationCodes">Array of location codes for which to retrieve product inventory information.</param>
        /// <param name="productCode"></param>
        /// <param name="responseFields"></param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl GetProductInventoryUrl(string productCode, string locationCodes =  null, string responseFields =  null)
		{
			var url = "/api/commerce/catalog/storefront/products/{productCode}/locationinventory?locationCodes={locationCodes}&responseFields={responseFields}";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "locationCodes", locationCodes);
			mozuUrl.FormatUrl( "productCode", productCode);
			mozuUrl.FormatUrl( "responseFields", responseFields);
			return mozuUrl;
		}

		/// <summary>
        /// Get Resource Url for GetProduct
        /// </summary>
        /// <param name="acceptVariantProductCode"></param>
        /// <param name="allowInactive">If true, returns an inactive product as part of the query.</param>
        /// <param name="productCode"></param>
        /// <param name="purchaseLocation"></param>
        /// <param name="quantity"></param>
        /// <param name="responseFields"></param>
        /// <param name="skipInventoryCheck">If true, skip the inventory validation process for the specified product.</param>
        /// <param name="supressOutOfStock404"></param>
        /// <param name="variationProductCode">Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl GetProductUrl(string productCode, string variationProductCode =  null, bool? allowInactive =  null, bool? skipInventoryCheck =  null, bool? supressOutOfStock404 =  null, int? quantity =  null, bool? acceptVariantProductCode =  null, string purchaseLocation =  null, string responseFields =  null)
		{
			var url = "/api/commerce/catalog/storefront/products/{productCode}?variationProductCode={variationProductCode}&allowInactive={allowInactive}&skipInventoryCheck={skipInventoryCheck}&supressOutOfStock404={supressOutOfStock404}&quantity={quantity}&acceptVariantProductCode={acceptVariantProductCode}&purchaseLocation={purchaseLocation}&responseFields={responseFields}";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "acceptVariantProductCode", acceptVariantProductCode);
			mozuUrl.FormatUrl( "allowInactive", allowInactive);
			mozuUrl.FormatUrl( "productCode", productCode);
			mozuUrl.FormatUrl( "purchaseLocation", purchaseLocation);
			mozuUrl.FormatUrl( "quantity", quantity);
			mozuUrl.FormatUrl( "responseFields", responseFields);
			mozuUrl.FormatUrl( "skipInventoryCheck", skipInventoryCheck);
			mozuUrl.FormatUrl( "supressOutOfStock404", supressOutOfStock404);
			mozuUrl.FormatUrl( "variationProductCode", variationProductCode);
			return mozuUrl;
		}

		/// <summary>
        /// Get Resource Url for GetProductForIndexing
        /// </summary>
        /// <param name="lastModifiedDate"></param>
        /// <param name="productCode"></param>
        /// <param name="productVersion"></param>
        /// <param name="responseFields"></param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl GetProductForIndexingUrl(string productCode, long? productVersion =  null, DateTime? lastModifiedDate =  null, string responseFields =  null)
		{
			var url = "/api/commerce/catalog/storefront/products/indexing/{productCode}?productVersion={productVersion}&lastModifiedDate={lastModifiedDate}&responseFields={responseFields}";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "lastModifiedDate", lastModifiedDate);
			mozuUrl.FormatUrl( "productCode", productCode);
			mozuUrl.FormatUrl( "productVersion", productVersion);
			mozuUrl.FormatUrl( "responseFields", responseFields);
			return mozuUrl;
		}

				/// <summary>
        /// Get Resource Url for ConfiguredProduct
        /// </summary>
        /// <param name="includeOptionDetails">If true, the response returns details about the product. If false, returns a product summary such as the product name, price, and sale price.</param>
        /// <param name="productCode"></param>
        /// <param name="purchaseLocation"></param>
        /// <param name="quantity"></param>
        /// <param name="responseFields"></param>
        /// <param name="skipInventoryCheck">If true, skip the inventory validation process for the specified product.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl ConfiguredProductUrl(string productCode, bool? includeOptionDetails =  null, bool? skipInventoryCheck =  null, int? quantity =  null, string purchaseLocation =  null, string responseFields =  null)
		{
			var url = "/api/commerce/catalog/storefront/products/{productCode}/configure?includeOptionDetails={includeOptionDetails}&skipInventoryCheck={skipInventoryCheck}&quantity={quantity}&purchaseLocation={purchaseLocation}&responseFields={responseFields}";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "includeOptionDetails", includeOptionDetails);
			mozuUrl.FormatUrl( "productCode", productCode);
			mozuUrl.FormatUrl( "purchaseLocation", purchaseLocation);
			mozuUrl.FormatUrl( "quantity", quantity);
			mozuUrl.FormatUrl( "responseFields", responseFields);
			mozuUrl.FormatUrl( "skipInventoryCheck", skipInventoryCheck);
			return mozuUrl;
		}

		/// <summary>
        /// Get Resource Url for ValidateProduct
        /// </summary>
        /// <param name="productCode"></param>
        /// <param name="purchaseLocation"></param>
        /// <param name="quantity"></param>
        /// <param name="responseFields"></param>
        /// <param name="skipDefaults"></param>
        /// <param name="skipInventoryCheck">If true, skip the inventory validation process for the specified product.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl ValidateProductUrl(string productCode, bool? skipInventoryCheck =  null, int? quantity =  null, bool? skipDefaults =  null, string purchaseLocation =  null, string responseFields =  null)
		{
			var url = "/api/commerce/catalog/storefront/products/{productCode}/validate?skipInventoryCheck={skipInventoryCheck}&quantity={quantity}&skipDefaults={skipDefaults}&purchaseLocation={purchaseLocation}&responseFields={responseFields}";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "productCode", productCode);
			mozuUrl.FormatUrl( "purchaseLocation", purchaseLocation);
			mozuUrl.FormatUrl( "quantity", quantity);
			mozuUrl.FormatUrl( "responseFields", responseFields);
			mozuUrl.FormatUrl( "skipDefaults", skipDefaults);
			mozuUrl.FormatUrl( "skipInventoryCheck", skipInventoryCheck);
			return mozuUrl;
		}

		/// <summary>
        /// Get Resource Url for ValidateDiscounts
        /// </summary>
        /// <param name="allowInactive">If true, this operation returns inactive product discounts as part of the POST.</param>
        /// <param name="customerAccountId">Unique ID of the customer account associated with the shopper requesting the discount.</param>
        /// <param name="productCode"></param>
        /// <param name="responseFields"></param>
        /// <param name="skipInventoryCheck">If true, do not validate the product inventory when evaluating the list of discounts.</param>
        /// <param name="variationProductCode">Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl ValidateDiscountsUrl(string productCode, string variationProductCode =  null, int? customerAccountId =  null, bool? allowInactive =  null, bool? skipInventoryCheck =  null, string responseFields =  null)
		{
			var url = "/api/commerce/catalog/storefront/products/{productCode}/validateDiscounts?variationProductCode={variationProductCode}&customerAccountId={customerAccountId}&allowInactive={allowInactive}&skipInventoryCheck={skipInventoryCheck}&responseFields={responseFields}";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "allowInactive", allowInactive);
			mozuUrl.FormatUrl( "customerAccountId", customerAccountId);
			mozuUrl.FormatUrl( "productCode", productCode);
			mozuUrl.FormatUrl( "responseFields", responseFields);
			mozuUrl.FormatUrl( "skipInventoryCheck", skipInventoryCheck);
			mozuUrl.FormatUrl( "variationProductCode", variationProductCode);
			return mozuUrl;
		}

		/// <summary>
        /// Get Resource Url for GetProductCosts
        /// </summary>
        /// <param name="responseFields"></param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl GetProductCostsUrl(string responseFields =  null)
		{
			var url = "/api/commerce/catalog/storefront/products/costs?responseFields={responseFields}";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "responseFields", responseFields);
			return mozuUrl;
		}

		/// <summary>
        /// Get Resource Url for GetProductInventories
        /// </summary>
        /// <param name="responseFields"></param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl GetProductInventoriesUrl(string responseFields =  null)
		{
			var url = "/api/commerce/catalog/storefront/products/locationinventory?responseFields={responseFields}";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "responseFields", responseFields);
			return mozuUrl;
		}

						
	}
}

