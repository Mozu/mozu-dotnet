
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

namespace Mozu.Api.Urls.Content.Documentlists
{
	public partial class DocumentTreeUrl 
	{

		/// <summary>
        /// Get Resource Url for GetTreeDocumentContent
        /// </summary>
        /// <param name="documentListName">Name of content documentListName to delete</param>
        /// <param name="documentName">The name of the document in the site.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl GetTreeDocumentContentUrl(string documentListName, string documentName)
		{
			var url = "/api/content/documentlists/{documentListName}/documentTree/{documentName}/content";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "documentListName", documentListName);
			mozuUrl.FormatUrl( "documentName", documentName);
			return mozuUrl;
		}

		/// <summary>
        /// Get Resource Url for TransformTreeDocumentContent
        /// </summary>
        /// <param name="crop">Crops the image based on the specified coordinates. The reference point for positive coordinates is the top-left corner of the image, and the reference point for negative coordinates is the bottom-right corner of the image.Usage: Example:  removes 10 pixels from all edges of the image.  leaves the image uncropped.</param>
        /// <param name="documentListName">Name of content documentListName to delete</param>
        /// <param name="documentName">The name of the document in the site.</param>
        /// <param name="height">Specifies an exact height dimension for the image, in pixels.</param>
        /// <param name="max">Specifies a pixel limitation for the largest side of an image.</param>
        /// <param name="maxHeight">Specifies a pixel limitation for the height of the image, preserving the aspect ratio if the image needs resizing.</param>
        /// <param name="maxWidth">Specifies a pixel limitation for the width of the image, preserving the aspect ratio if the image needs resizing.</param>
        /// <param name="quality">Adjusts the image compression. Accepts values from 0-100, where 100 = highest quality, least compression.</param>
        /// <param name="width">Specifies an exact width dimension for the image, in pixels.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl TransformTreeDocumentContentUrl(string documentListName, string documentName, int? width =  null, int? height =  null, int? max =  null, int? maxWidth =  null, int? maxHeight =  null, string crop =  null, int? quality =  null)
		{
			var url = "/api/content/documentlists/{documentListName}/documentTree/{documentName}/transform?width={width}&height={height}&maxWidth={maxWidth}&maxHeight={maxHeight}&crop={crop}&quality={quality}";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "crop", crop);
			mozuUrl.FormatUrl( "documentListName", documentListName);
			mozuUrl.FormatUrl( "documentName", documentName);
			mozuUrl.FormatUrl( "height", height);
			mozuUrl.FormatUrl( "max", max);
			mozuUrl.FormatUrl( "maxHeight", maxHeight);
			mozuUrl.FormatUrl( "maxWidth", maxWidth);
			mozuUrl.FormatUrl( "quality", quality);
			mozuUrl.FormatUrl( "width", width);
			return mozuUrl;
		}

		/// <summary>
        /// Get Resource Url for GetTreeDocument
        /// </summary>
        /// <param name="documentListName">Name of content documentListName to delete</param>
        /// <param name="documentName">The name of the document in the site.</param>
        /// <param name="includeInactive">Include inactive content.</param>
        /// <param name="responseFields">Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl GetTreeDocumentUrl(string documentListName, string documentName, bool? includeInactive =  null, string responseFields =  null)
		{
			var url = "/api/content/documentlists/{documentListName}/documentTree/{documentName}?includeInactive={includeInactive}&responseFields={responseFields}";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "documentListName", documentListName);
			mozuUrl.FormatUrl( "documentName", documentName);
			mozuUrl.FormatUrl( "includeInactive", includeInactive);
			mozuUrl.FormatUrl( "responseFields", responseFields);
			return mozuUrl;
		}

						/// <summary>
        /// Get Resource Url for UpdateTreeDocumentContent
        /// </summary>
        /// <param name="documentListName">Name of content documentListName to delete</param>
        /// <param name="documentName">The name of the document in the site.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl UpdateTreeDocumentContentUrl(string documentListName, string documentName)
		{
			var url = "/api/content/documentlists/{documentListName}/documentTree/{documentName}/content?folderPath={folderPath}&folderId={folderId}";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "documentListName", documentListName);
			mozuUrl.FormatUrl( "documentName", documentName);
			return mozuUrl;
		}

				/// <summary>
        /// Get Resource Url for DeleteTreeDocumentContent
        /// </summary>
        /// <param name="documentListName">Name of content documentListName to delete</param>
        /// <param name="documentName">The name of the document in the site.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl DeleteTreeDocumentContentUrl(string documentListName, string documentName)
		{
			var url = "/api/content/documentlists/{documentListName}/documentTree/{documentName}/content?folderPath={folderPath}&folderId={folderId}";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "documentListName", documentListName);
			mozuUrl.FormatUrl( "documentName", documentName);
			return mozuUrl;
		}

		
	}
}

